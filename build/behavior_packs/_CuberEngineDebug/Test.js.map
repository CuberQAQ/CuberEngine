{"version":3,"sources":["Test.ts"],"names":[],"mappings":"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","file":"../CuberEngine/scripts/Test.js","sourcesContent":["import { Player, world, DynamicPropertiesDefinition, PropertyRegistry, system } from \"@minecraft/server\";\r\nimport { ActionFormData, MessageFormData } from \"@minecraft/server-ui\";\r\nimport { anaylseError, isAdmin, tellErrorMessage, tellMessage, tellSuccessMessage, test } from \"./utils\";\r\nimport { http, HttpClient, HttpRequest, HttpResponse, HttpHeader, HttpRequestMethod } from \"@minecraft/server-net\";\r\nimport * as fs from \"graceful-fs\";\r\nimport { SecretString, secrets } from \"@minecraft/server-admin\";\r\nimport { backupInfo, data, reloadData, saveData } from \"./Data\";\r\nimport { clearEntity } from \"./ServerManage\";\r\nconst overworld = world.getDimension(\"overworld\");\r\nconst nether = world.getDimension(\"nether\");\r\nconst the_end = world.getDimension(\"the_end\");\r\nconst moduleName = \"Test\";\r\nconst moduleVersion = \"1.0.0\";\r\nconst testJson = {\r\n  snow: {\r\n    lists: [\r\n      {\r\n        name: \"transport\",\r\n      },\r\n    ],\r\n  },\r\n};\r\nconst fileName = \"test.json\";\r\nfunction initTest() {\r\n  world.events.beforeChat.subscribe(async (e) => {\r\n    try {\r\n      if (/^#cuber /.test(e.message)) {\r\n        if (isAdmin(e.sender.name)) {\r\n          if (/^#cuber net/.test(e.message)) {\r\n            tellMessage(moduleName, \"Net Test Start\");\r\n            let req = new HttpRequest(\"http://localhost:25641/data.json\");\r\n            req.setMethod(HttpRequestMethod.GET);\r\n            req.addHeader(\"reload\", \"true\");\r\n            req.setTimeout(60);\r\n            http.request(req).then(\r\n              (response) => {\r\n                if (response.status == 200) {\r\n                  tellSuccessMessage(\r\n                    moduleName,\r\n                    \"Net Test Succeeded. [\" +\r\n                      response.status +\r\n                      \"] \\n§r\" +\r\n                      \"BODY: \" +\r\n                      response.body +\r\n                      \"\\nBODY(Decoded): \" +\r\n                      decodeURIComponent(response.body)\r\n                  );\r\n                } else {\r\n                  tellErrorMessage(moduleName, \"Net Test Failed. [\" + response.status + \"]\");\r\n                }\r\n              },\r\n              () => {\r\n                tellErrorMessage(moduleName, \"Net Test Failed. [PROMIST_FAILURE]\");\r\n              }\r\n            );\r\n          } else if (/^#cuber save/.test(e.message)) {\r\n            tellMessage(moduleName, \"Net Test Save\");\r\n            let request = new HttpRequest(\"http://localhost:25641/data.json\");\r\n            request.setMethod(HttpRequestMethod.POST);\r\n            request.addHeader(\"upgrade\", \"save\");\r\n            request.addHeader(\"Content-Type\", \"application/json; charset=utf-8\");\r\n            request.addHeader(\"cookie\", encodeURIComponent(e.message.replace(/^#cuber save/, \"\")));\r\n            request.setTimeout(60);\r\n            http.request(request).then(\r\n              (response) => {\r\n                test(() => {\r\n                  if (response.status == 200) {\r\n                    tellSuccessMessage(\r\n                      moduleName,\r\n                      \"Data Save Succeeded. [\" + response.status + \"]: §r\" + response.body\r\n                    );\r\n                  } else {\r\n                    tellErrorMessage(moduleName, \"Data Save Failed. [\" + response.status + \"]\");\r\n                  }\r\n                }, moduleName);\r\n              },\r\n              () => {\r\n                tellErrorMessage(moduleName, \"Data Save Failed. [PROMISE_FAILURE]\");\r\n              }\r\n            );\r\n          } else if (/^#cuber send/.test(e.message)) {\r\n            tellMessage(moduleName, \"Net Test Send\");\r\n            let request = new HttpRequest(\"http://localhost:25641/ring\");\r\n            request.setMethod(HttpRequestMethod.POST);\r\n            request.addHeader(\"cookie\", encodeURIComponent(e.message.replace(/^#cuber send/, \"\")));\r\n            request.setTimeout(60);\r\n            http.request(request).then(\r\n              (response) => {\r\n                test(() => {\r\n                  if (response.status == 200) {\r\n                    tellSuccessMessage(\r\n                      moduleName,\r\n                      \"Net Send Succeeded. [\" + response.status + \"]: §r\" + decodeURIComponent(response.body)\r\n                    );\r\n                  } else {\r\n                    tellErrorMessage(moduleName, \"Net Send Failed. [\" + response.status + \"]\");\r\n                  }\r\n                }, moduleName);\r\n              },\r\n              () => {\r\n                tellErrorMessage(moduleName, \"Net Send Failed. [PROMISE_FAILURE]\");\r\n              }\r\n            );\r\n          } else if (/^#cuber reload/.test(e.message)) {\r\n            reloadData();\r\n          } else if (/^#cuber backupInfo/.test(e.message)) {\r\n            tellMessage(\"BackupInfo\", JSON.stringify(backupInfo));\r\n          } else if (/^#cuber flyable/.test(e.message)) {\r\n            tellMessage(moduleName, \"@\" + e.sender.name + \" Can Fly: \" + e.sender.hasComponent(\"minecraft:can_fly\"));\r\n          } else if (/^#cuber spectator/.test(e.message)) {\r\n            tellMessage(\r\n              moduleName,\r\n              \"successCount=\" + (await e.sender.runCommandAsync(\"testfor @s[m=spectator]\")).successCount\r\n            );\r\n          } else if (/^#cuber sweep/.test(e.message)) {\r\n            tellMessage(\"§b§l扫地姬\", \"§e@\" + e.sender.name + \"§r 喊我扫地啦！\");\r\n            data.settings.entity_clear.config.forEach((config: any) => {\r\n              if (!config.enable) return;\r\n              clearEntity(config);\r\n            });\r\n            return false;\r\n          } else if (/^#cuber killpig/.test(e.message)) {\r\n            tellMessage(\r\n              moduleName,\r\n              \"successCount=\" + (await overworld.runCommandAsync(\"kill @e[type=pig]\")).successCount\r\n            );\r\n          } else {\r\n            tellErrorMessage(moduleName, \"Admin Test Command Undefined\");\r\n          }\r\n        } else {\r\n          tellErrorMessage(moduleName, \"Refuse to Run Admin Test Command\");\r\n        }\r\n      } else if (e.message.startsWith(\"#snow\")) {\r\n        e.sender.runCommandAsync(\"give @s snowball 16\");\r\n      } else if (e.message.trim() == \"#home\") {\r\n        if (data.players[e.sender.name].home_spot == undefined) {\r\n          tellMessage(\"§b§l系统\", \"§e§l@\" + e.sender.name + \" §r你还§c没有设置个人传送点§r，试试#sethome吧\");\r\n        } else {\r\n          tellMessage(\"§b§l系统\", \"§e§l@\" + e.sender.name + \" §r传送到了 §a§l个人传送点\");\r\n          e.sender.teleport(\r\n            { ...data.players[e.sender.name].home_spot },\r\n            world.getDimension(data.players[e.sender.name].home_spot.dimension),\r\n            0,\r\n            0\r\n          );\r\n        }\r\n      } else if (e.message.trim() == \"#sethome\") {\r\n        let dimension = \"overworld\";\r\n        switch (e.sender.dimension) {\r\n          case overworld:\r\n            dimension = \"overworld\";\r\n            break;\r\n          case the_end:\r\n            dimension = \"the_end\";\r\n            break;\r\n          case nether:\r\n            dimension = \"nether\";\r\n            break;\r\n        }\r\n        data.players[e.sender.name].home_spot = { ...e.sender.location, dimension };\r\n        tellMessage(\"§b§l系统\", \"§e§l@\" + e.sender.name + \" §r个人传送点 §a§l设置成功\");\r\n        saveData(\"@\" + e.sender.name + \" #sethome\");\r\n      }\r\n    } catch (e) {\r\n      anaylseError(moduleName, e, \"In beforeChat subscribe\");\r\n    }\r\n  });\r\n  return { moduleName, moduleVersion };\r\n}\r\n\r\nexport { initTest };\r\n"],"sourceRoot":"../../../scripts/"}